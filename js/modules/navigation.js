// navigation.js
import { getDOMElements } from './constants.js';
import { logEvent } from './utils.js';

export const setupNavigationAccess = () => {
    const { navLinks } = getDOMElements();
    
    if (!navLinks) return;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const accessLevel = parseInt(link.getAttribute('data-access') || '1');
            const userAccess = getUserAccessLevel(); // –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
            if (accessLevel > userAccess) {
                logEvent(`–û–®–ò–ë–ö–ê –î–û–°–¢–£–ü–ê: –¢–†–ï–ë–£–ï–¢–°–Ø –£–†–û–í–ï–ù–¨ ${accessLevel}`);
                showAccessDenied(accessLevel);
            } else {
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–∞–º
                logEvent(`–î–û–°–¢–£–ü –†–ê–ó–†–ï–®–ï–ù: ${link.textContent}`);
                handleNavigation(link);
            }
        });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const emergencyBtn = document.getElementById('nav-emergency-protocol');
    if (emergencyBtn) {
        emergencyBtn.addEventListener('click', (e) => {
            e.preventDefault();
            const accessLevel = parseInt(emergencyBtn.getAttribute('data-access') || '4');
            const userAccess = getUserAccessLevel();
            
            if (accessLevel > userAccess) {
                logEvent(`–û–®–ò–ë–ö–ê –î–û–°–¢–£–ü–ê: –î–õ–Ø –ê–í–ê–†–ò–ô–ù–û–ì–û –ü–†–û–¢–û–ö–û–õ–ê –¢–†–ï–ë–£–ï–¢–°–Ø –£–†–û–í–ï–ù–¨ ${accessLevel}`);
                showAccessDenied(accessLevel);
                return;
            }
            
            // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –µ—Å—Ç—å, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–≤–∞—Ä–∏–π–Ω—ã–π —Ä–µ–∂–∏–º
            if (window.emergencyMode) {
                window.emergencyMode.toggleEmergencyMode();
            } else {
                logEvent("–û–®–ò–ë–ö–ê: –°–ò–°–¢–ï–ú–ê –ê–í–ê–†–ò–ô–ù–û–ì–û –†–ï–ñ–ò–ú–ê –ù–ï –ó–ê–ì–†–£–ñ–ï–ù–ê");
            }
        });
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ –≤ –ø–∞–Ω–µ–ª–∏
    updateAccessPanel();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const getUserAccessLevel = () => {
    // –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–∑ localStorage –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Ä–æ–≤–µ–Ω—å 2 –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
    return parseInt(localStorage.getItem('userAccessLevel') || '2');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const handleNavigation = (link) => {
    const linkId = link.textContent.trim();
    
    switch(linkId) {
        case 'SCP-‚ñà‚ñà‚ñà‚ñà‚ñà':
            logEvent("–ó–ê–ì–†–£–ó–ö–ê –î–û–°–¨–ï SCP-‚ñà‚ñà‚ñà‚ñà‚ñà...");
            simulateLoading('SCP_DOSSIER');
            break;
            
        case '–û–¢–ß–Å–¢ 001-Œ©':
            logEvent("–î–û–°–¢–£–ü –ö –ó–ê–°–ï–ö–†–ï–ß–ï–ù–ù–´–ú –û–¢–ß–ï–¢–ê–ú...");
            simulateLoading('CLASSIFIED_REPORTS');
            break;
            
        case '–ü–†–û–¢–û–ö–û–õ–´':
            logEvent("–ü–†–û–°–ú–û–¢–† –ü–†–û–¢–û–ö–û–õ–û–í –°–û–î–ï–†–ñ–ê–ù–ò–Ø...");
            simulateLoading('CONTAINMENT_PROTOCOLS');
            break;
            
        case '–ê–†–•–ò–í Œ©':
            logEvent("–î–û–°–¢–£–ü –ö –ê–†–•–ò–í–ê–ú –£–†–û–í–ù–Ø Œ©...");
            simulateLoading('OMEGA_ARCHIVES');
            break;
            
        case '–ò–ù–°–¢–†–£–ö–¢–ê–ñ':
            logEvent("–ó–ê–ì–†–£–ó–ö–ê –ü–†–û–¶–ï–î–£–† –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò...");
            simulateLoading('SAFETY_BRIEFING');
            break;
            
        default:
            logEvent(`–ù–ê–í–ò–ì–ê–¶–ò–Ø: ${linkId}`);
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
const simulateLoading = (contentType) => {
    const loadingMessages = {
        'SCP_DOSSIER': [
            "–î–ï–®–ò–§–†–û–í–ö–ê –î–ê–ù–ù–´–• SCP...",
            "–ó–ê–ì–†–£–ó–ö–ê –ú–ï–î–ò–¶–ò–ù–°–ö–ò–• –û–¢–ß–ï–¢–û–í...",
            "–ê–ù–ê–õ–ò–ó –ò–ù–¶–ò–î–ï–ù–¢–û–í –°–û–î–ï–†–ñ–ê–ù–ò–Ø..."
        ],
        'CLASSIFIED_REPORTS': [
            "–ü–†–û–í–ï–†–ö–ê –£–†–û–í–ù–Ø –î–û–°–¢–£–ü–ê...",
            "–î–ï–®–ò–§–†–û–í–ö–ê –ó–ê–©–ò–©–ï–ù–ù–´–• –§–ê–ô–õ–û–í...",
            "–ó–ê–ì–†–£–ó–ö–ê –û–¢–ß–ï–¢–û–í –£–†–û–í–ù–Ø Œ©..."
        ],
        'CONTAINMENT_PROTOCOLS': [
            "–û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–ó–´ –ü–†–û–¢–û–ö–û–õ–û–í...",
            "–ü–†–û–í–ï–†–ö–ê –ê–ö–¢–£–ê–õ–¨–ù–û–°–¢–ò –ü–†–û–¶–ï–î–£–†...",
            "–ó–ê–ì–†–£–ó–ö–ê –≠–ö–°–¢–†–ï–ù–ù–´–• –ü–†–û–¢–û–ö–û–õ–û–í..."
        ],
        'OMEGA_ARCHIVES': [
            "–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö –°–ï–†–í–ï–†–ê–ú –ê–†–•–ò–í–ê...",
            "–ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–•...",
            "–ó–ê–ì–†–£–ó–ö–ê –ò–°–¢–û–†–ò–ß–ï–°–ö–ò–• –ó–ê–ü–ò–°–ï–ô..."
        ],
        'SAFETY_BRIEFING': [
            "–û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–û–¶–ï–î–£–† –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò...",
            "–ó–ê–ì–†–£–ó–ö–ê –í–ò–î–ï–û–ò–ù–°–¢–†–£–ö–¢–ê–ñ–ï–ô...",
            "–ü–û–î–ì–û–¢–û–í–ö–ê –¢–ï–°–¢–û–í–´–• –°–¶–ï–ù–ê–†–ò–ï–í..."
        ]
    };

    const messages = loadingMessages[contentType] || [
        "–û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ü–†–û–°–ê...",
        "–ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•...",
        "–ó–ê–ì–†–£–ó–ö–ê –ö–û–ù–¢–ï–ù–¢–ê..."
    ];

    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    messages.forEach((message, index) => {
        setTimeout(() => {
            logEvent(message);
            
            // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
            if (index === messages.length - 1) {
                setTimeout(() => {
                    logEvent(`${contentType.replace('_', ' ')}: –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê`);
                    showAccessGranted();
                }, 500);
            }
        }, index * 800);
    });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–∫–∞–∑–∞ –≤ –¥–æ—Å—Ç—É–ø–µ
const showAccessDenied = (requiredLevel) => {
    const denied = document.createElement('div');
    denied.className = 'access-denied-overlay';
    denied.innerHTML = `
        <div class="access-denied-modal">
            <div class="access-denied-header">
                <span class="access-icon">üîí</span>
                <span class="access-title">–î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù</span>
            </div>
            <div class="access-denied-content">
                <p>–¢–†–ï–ë–£–ï–¢–°–Ø –£–†–û–í–ï–ù–¨ –î–û–°–¢–£–ü–ê: ${requiredLevel}</p>
                <p>–í–ê–® –£–†–û–í–ï–ù–¨: ${getUserAccessLevel()}</p>
                <p class="access-warning">–ù–ï–°–ê–ù–ö–¶–ò–û–ù–ò–†–û–í–ê–ù–ù–´–ô –î–û–°–¢–£–ü –ë–£–î–ï–¢ –ó–ê–§–ò–ö–°–ò–†–û–í–ê–ù</p>
            </div>
            <div class="access-denied-footer">
                <span class="security-notice">SCP SECURITY SYSTEM</span>
            </div>
        </div>
    `;
    
    denied.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10000;
        font-family: 'Share Tech Mono', monospace;
    `;
    
    document.body.appendChild(denied);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const style = document.createElement('style');
    style.textContent = `
        .access-denied-modal {
            background: linear-gradient(135deg, #2a0000 0%, #1a0000 100%);
            border: 3px solid #ff0000;
            padding: 30px;
            border-radius: 5px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255, 0, 0, 0.5);
            animation: accessDeniedPulse 2s infinite;
        }
        
        .access-denied-header {
            margin-bottom: 20px;
        }
        
        .access-icon {
            font-size: 48px;
            display: block;
            margin-bottom: 10px;
        }
        
        .access-title {
            font-size: 28px;
            color: #ff0000;
            text-transform: uppercase;
            font-weight: bold;
            text-shadow: 0 0 10px rgba(255, 0, 0, 0.7);
        }
        
        .access-denied-content {
            margin-bottom: 20px;
        }
        
        .access-denied-content p {
            margin: 10px 0;
            color: #fff;
            font-size: 18px;
        }
        
        .access-warning {
            color: #ff6b6b !important;
            font-size: 14px !important;
            margin-top: 20px !important;
        }
        
        .access-denied-footer {
            border-top: 1px solid #ff0000;
            padding-top: 15px;
        }
        
        .security-notice {
            color: #ff6b6b;
            font-size: 12px;
        }
        
        @keyframes accessDeniedPulse {
            0%, 100% { box-shadow: 0 0 30px rgba(255, 0, 0, 0.5); }
            50% { box-shadow: 0 0 50px rgba(255, 0, 0, 0.8); }
        }
    `;
    document.head.appendChild(style);
    
    setTimeout(() => {
        denied.remove();
        style.remove();
    }, 3000);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
const showAccessGranted = () => {
    const granted = document.createElement('div');
    granted.className = 'access-granted-overlay';
    granted.textContent = '–î–û–°–¢–£–ü –†–ê–ó–†–ï–®–ï–ù';
    granted.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0, 255, 0, 0.9);
        color: #000;
        padding: 20px 40px;
        border: 3px solid #00ff00;
        z-index: 10000;
        font-family: 'Share Tech Mono', monospace;
        font-size: 24px;
        font-weight: bold;
        box-shadow: 0 0 30px rgba(0, 255, 0, 0.5);
        animation: accessGrantedPulse 1s infinite;
    `;
    
    document.body.appendChild(granted);
    
    setTimeout(() => {
        granted.remove();
    }, 1500);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –¥–æ—Å—Ç—É–ø–∞
const updateAccessPanel = () => {
    const accessLevelSpan = document.querySelector('.access-level');
    const userIdSpan = document.querySelector('.user-id');
    const userAccess = getUserAccessLevel();
    
    if (accessLevelSpan) {
        // –ú–∞—Å–∫–∏—Ä—É–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–∞–º–æ–≥–æ —É—Ä–æ–≤–Ω—è
        const maskedLevel = userAccess >= 3 ? '‚ñà‚ñà' : `–£–†–û–í–ï–ù–¨ ${userAccess}`;
        accessLevelSpan.textContent = `–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: ${maskedLevel}`;
    }
    
    if (userIdSpan) {
        // –°–ª—É—á–∞–π–Ω—ã–π ID —Å—É–±—ä–µ–∫—Ç–∞
        const randomId = Math.random().toString(36).substring(2, 8).toUpperCase();
        userIdSpan.textContent = `–°—É–±—ä–µ–∫—Ç ${randomId}`;
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
export const setUserAccessLevel = (level) => {
    localStorage.setItem('userAccessLevel', level.toString());
    updateAccessPanel();
    logEvent(`–£–†–û–í–ï–ù–¨ –î–û–°–¢–£–ü–ê –ò–ó–ú–ï–ù–ï–ù: ${level}`);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞
export const getCurrentAccessLevel = () => {
    return getUserAccessLevel();
};