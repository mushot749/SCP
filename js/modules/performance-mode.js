// performance-mode.js
export class PerformanceMode {
    constructor() {
        this.isLightweightMode = false;
        this.toggleButton = document.getElementById('toggle-performance-mode');
        this.lightweightStyles = null;
        this.cameraGrid = document.querySelector('.camera-grid');
        this.cameraPlaceholder = document.querySelector('.camera-placeholder');
        this.controlPanel = document.querySelector('.control-panel');
        
        this.init();
    }

    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        const savedMode = localStorage.getItem('scp-performance-mode');
        if (savedMode === 'lightweight') {
            this.enableLightweightMode();
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        if (this.toggleButton) {
            this.toggleButton.addEventListener('click', () => {
                this.toggleMode();
            });
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º –æ–±–ª–µ–≥—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        if (this.isMobileDevice() && savedMode === null) {
            this.enableLightweightMode();
        }
    }

    toggleMode() {
        if (this.isLightweightMode) {
            this.disableLightweightMode();
        } else {
            this.enableLightweightMode();
        }
    }

    enableLightweightMode() {
        if (!this.lightweightStyles) {
            this.lightweightStyles = document.createElement('link');
            this.lightweightStyles.rel = 'stylesheet';
            this.lightweightStyles.href = 'css/modes/lightweight-mode.css';
            document.head.appendChild(this.lightweightStyles);
        }

        // –°–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–µ–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder
        if (this.cameraGrid) this.cameraGrid.style.display = 'none';
        if (this.cameraPlaceholder) this.cameraPlaceholder.style.display = 'block';
        if (this.controlPanel) this.controlPanel.style.display = 'none';

        document.body.classList.add('lightweight-mode');
        this.isLightweightMode = true;
        localStorage.setItem('scp-performance-mode', 'lightweight');
        
        this.updateButtonText();
        this.logModeChange('–û–ë–õ–ï–ì–ß–ï–ù–ù–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–û–í–ê–ù - –í–ò–î–ï–û–ù–ê–ë–õ–Æ–î–ï–ù–ò–ï –û–¢–ö–õ–Æ–ß–ï–ù–û');
    }

    disableLightweightMode() {
        if (this.lightweightStyles) {
            this.lightweightStyles.remove();
            this.lightweightStyles = null;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ –∏ —Å–∫—Ä—ã–≤–∞–µ–º placeholder
        if (this.cameraGrid) this.cameraGrid.style.display = 'grid';
        if (this.cameraPlaceholder) this.cameraPlaceholder.style.display = 'none';
        if (this.controlPanel) this.controlPanel.style.display = 'flex';

        document.body.classList.remove('lightweight-mode');
        this.isLightweightMode = false;
        localStorage.setItem('scp-performance-mode', 'full');
        
        this.updateButtonText();
        this.logModeChange('–ü–û–õ–ù–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–û–í–ê–ù - –í–ò–î–ï–û–ù–ê–ë–õ–Æ–î–ï–ù–ò–ï –í–ö–õ–Æ–ß–ï–ù–û');
    }

    updateButtonText() {
        if (this.toggleButton) {
            this.toggleButton.textContent = this.isLightweightMode ? 
                'üéÆ –ü–û–õ–ù–´–ô –†–ï–ñ–ò–ú' : 
                'üöÄ –û–ë–õ–ï–ì–ß–ï–ù–ù–´–ô –†–ï–ñ–ò–ú';
        }
    }

    logModeChange(message) {
        if (typeof window.logEvent === 'function') {
            window.logEvent(message);
        } else {
            console.log('SYSTEM LOG:', message);
        }
    }

    isMobileDevice() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
               window.innerWidth < 768;
    }

    getCurrentMode() {
        return this.isLightweightMode ? 'lightweight' : 'full';
    }
}