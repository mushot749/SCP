// init.js
import { getDOMElements } from './constants.js';
import { updateTime, logEvent, randomizeScanLines } from './utils.js';
import { initializeVideos } from './video-manager.js';
import { setupGlitchEffects } from './glitch-effects.js';
import { setupNavigationAccess } from './navigation.js';
import { setupEventHandlers } from './event-handlers.js';
import { setColorMode } from './video-manager.js';
import { prefersReducedMotion } from './constants.js';
import { incrementUptime, getUptime } from './state.js';
import { EmergencyPerformanceMode } from './emergency-performance-mode.js';
import { setupAnomalyTriggers } from './anomaly-triggers.js';

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞
window.isLightweightMode = true;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
export const initializeSystem = () => {
    const { 
        timeDisplay, 
        uptimeDisplay, 
        toggleSafeModeBtn
    } = getDOMElements();

    // Set current time
    updateTime();
    setInterval(updateTime, 1000);
    
    // Update uptime
    setInterval(() => {
        incrementUptime();
        if (uptimeDisplay) {
            const { hours, minutes, seconds } = getUptime();
            uptimeDisplay.textContent = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }
    }, 1000);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∂–∏–º–æ–≤
    window.emergencyPerformanceMode = new EmergencyPerformanceMode();

    // Log initialization
    logEvent("–°–ò–°–¢–ï–ú–ê –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê SCP –ò–ù–ò–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ê");
    logEvent("–†–ï–ñ–ò–ú: –û–ë–õ–ï–ì–ß–ï–ù–ù–´–ô (–ë–ï–ó–û–ü–ê–°–ù–´–ô)");
    logEvent("–í–ò–î–ï–û–ù–ê–ë–õ–Æ–î–ï–ù–ò–ï: –û–¢–ö–õ–Æ–ß–ï–ù–û");
    logEvent("–ê–ù–û–ú–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´: –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´");

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ä–æ–≤–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupNavigationAccess();

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventHandlers();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ ARG —ç–ª–µ–º–µ–Ω—Ç—ã
    addHiddenARGElements();

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
    if (toggleSafeModeBtn) {
        toggleSafeModeBtn.addEventListener('click', toggleSafeMode);
    }
};

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
export const toggleSafeMode = () => {
    const { 
        cameraGrid, 
        toggleSafeModeBtn,
        videoElements,
        cameraFeeds,
        cameraPlaceholder
    } = getDOMElements();

    window.isLightweightMode = !window.isLightweightMode;

    if (!window.isLightweightMode) {
        // –í–∫–ª—é—á–∞–µ–º –ø–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º
        document.body.classList.remove('lightweight-mode');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–º–µ—Ä—ã, —Å–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
        if (cameraGrid) cameraGrid.style.display = 'grid';
        if (cameraPlaceholder) cameraPlaceholder.style.display = 'none';
        
        // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        if (toggleSafeModeBtn) {
            toggleSafeModeBtn.textContent = "üîí –í–ö–õ–Æ–ß–ò–¢–¨ –ë–ï–ó–û–ü–ê–°–ù–´–ô –†–ï–ñ–ò–ú";
            toggleSafeModeBtn.classList.add('active');
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–µ–æ
        initializeVideos(videoElements);
        setColorMode(videoElements, true);

        // –í–∫–ª—é—á–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
        randomizeScanLines();
        
        if (!prefersReducedMotion && cameraFeeds) {
            setupGlitchEffects(cameraFeeds);
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        document.querySelectorAll('.control-btn').forEach(btn => {
            if (!btn.id.includes('toggle-safe-mode')) {
                btn.disabled = false;
            }
        });

        // –õ–æ–≥–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
        logEvent("–ë–ï–ó–û–ü–ê–°–ù–´–ô –†–ï–ñ–ò–ú –û–¢–ö–õ–Æ–ß–ï–ù");
        logEvent("–í–ò–î–ï–û–ù–ê–ë–õ–Æ–î–ï–ù–ò–ï: –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–û");
        logEvent("–ê–ù–û–ú–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´: –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–ù–´");
        logEvent("–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –°–ò–°–¢–ï–ú–ê –£–Ø–ó–í–ò–ú–ê –ö –í–û–ó–î–ï–ô–°–¢–í–ò–Æ –ê–ù–û–ú–ê–õ–ò–ô");

        // –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–¥–ª–µ–Ω–Ω–æ–µ –∑–∞—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (!window.emergencyPerformanceMode.isAnyModeActive()) {
                loadAnomalyModules();
            }
        }, 5000);

    } else {
        // –í–∫–ª—é—á–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º
        document.body.classList.add('lightweight-mode');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–∞–º–µ—Ä—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
        if (cameraGrid) cameraGrid.style.display = 'none';
        if (cameraPlaceholder) cameraPlaceholder.style.display = 'block';
        
        // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        if (toggleSafeModeBtn) {
            toggleSafeModeBtn.textContent = "üîì –í–´–ö–õ–Æ–ß–ò–¢–¨ –ë–ï–ó–û–ü–ê–°–ù–´–ô –†–ï–ñ–ò–ú";
            toggleSafeModeBtn.classList.remove('active');
        }

        // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        document.querySelectorAll('.control-btn').forEach(btn => {
            if (!btn.id.includes('toggle-safe-mode') && !btn.id.includes('reset-system')) {
                btn.disabled = true;
            }
        });

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∞–Ω–æ–º–∞–ª–∏–∏
        stopAllAnomalies();

        // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é
        logEvent("–ë–ï–ó–û–ü–ê–°–ù–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–û–í–ê–ù");
        logEvent("–í–ò–î–ï–û–ù–ê–ë–õ–Æ–î–ï–ù–ò–ï: –û–¢–ö–õ–Æ–ß–ï–ù–û");
        logEvent("–ê–ù–û–ú–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´: –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´");
        logEvent("–°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–©–ï–ù–ê –û–¢ –í–û–ó–î–ï–ô–°–¢–í–ò–Ø –ê–ù–û–ú–ê–õ–ò–ô");
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π –∞–Ω–æ–º–∞–ª–∏–π
async function loadAnomalyModules() {
    try {
        const [{ ZalgoText }, { AnomalyInfection }, { EmergencyMode }] = await Promise.all([
            import('./zalgo-effect.js'),
            import('./anomaly-core.js'),
            import('./emergency-mode.js')
        ]);
        
        window.zalgoEffect = new ZalgoText();
        window.anomaly = new AnomalyInfection();
        window.emergencyMode = new EmergencyMode();
        
        logEvent("–ú–û–î–£–õ–¨ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ê–ù–û–ú–ê–õ–ò–ô –ê–ö–¢–ò–í–ò–†–û–í–ê–ù");
        logEvent("–°–ò–°–¢–ï–ú–ê –ê–í–ê–†–ò–ô–ù–û–ì–û –†–ï–ê–ì–ò–†–û–í–ê–ù–ò–Ø –ì–û–¢–û–í–ê");
        
        setTimeout(() => {
            if (window.zalgoEffect && typeof window.zalgoEffect.startSlowInfection === 'function') {
                window.zalgoEffect.startSlowInfection();
                logEvent("–ê–ù–ê–õ–ò–ó: –û–ë–ù–ê–†–£–ñ–ï–ù–ê –°–õ–ê–ë–ê–Ø –ê–ù–û–ú–ê–õ–¨–ù–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨");
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –∞–Ω–æ–º–∞–ª–∏–π –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                setupAnomalyTriggers();
            }
        }, 10000);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–Ω–æ–º–∞–ª–∏–∏:", error);
        logEvent("–û–®–ò–ë–ö–ê: –ú–û–î–£–õ–¨ –ê–ù–û–ú–ê–õ–ò–ô –ù–ï –ó–ê–ì–†–£–ñ–ï–ù");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –∞–Ω–æ–º–∞–ª–∏–π
function stopAllAnomalies() {
    if (window.zalgoEffect && typeof window.zalgoEffect.stopPropagation === 'function') {
        window.zalgoEffect.stopPropagation();
    }
    if (window.anomaly && typeof window.anomaly.stop === 'function') {
        window.anomaly.stop();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫—Ä—ã—Ç—ã—Ö ARG —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function addHiddenARGElements() {
    // –°–∫—Ä—ã—Ç—ã–π div —Å –∫–æ–¥–æ–º –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π
    const hiddenCode = document.createElement('div');
    hiddenCode.className = 'hidden-arg-code';
    hiddenCode.innerHTML = `<!-- SCP FOUNDATION INTERNAL MEMO -->`;
    document.body.appendChild(hiddenCode);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç–∞-—Ç–µ–≥–∏
    const metaAnomaly = document.createElement('meta');
    metaAnomaly.name = 'anomaly-level';
    metaAnomaly.content = '0.1';
    document.head.appendChild(metaAnomaly);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è ARG
    document.body.setAttribute('data-reality-level', 'stable');
    document.body.setAttribute('data-anomaly-present', 'true');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
export { addHiddenARGElements, toggleSafeMode };