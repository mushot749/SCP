// emergency-mode.js
import { getDOMElements } from './constants.js';
import { logEvent } from './utils.js';

class EmergencyMode {
    constructor() {
        this.isActive = false;
        this.emergencyButton = null;
        this.navEmergencyButton = null;
        this.overlay = null;
        this.alertBar = null;
        this.init();
    }

    init() {
        this.createEmergencyButton();
        this.setupNavEmergencyButton();
        this.setupEventListeners();
    }

    createEmergencyButton() {
        const { controls } = getDOMElements();
        if (!controls) return;

        this.emergencyButton = document.createElement('button');
        this.emergencyButton.id = 'emergency-protocol';
        this.emergencyButton.className = 'control-btn emergency-button';
        this.emergencyButton.textContent = '–ü–†–û–¢–û–ö–û–õ 7-Œî';
        this.emergencyButton.title = '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ä–∏–π–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç –∞–Ω–æ–º–∞–ª–∏–π';

        controls.appendChild(this.emergencyButton);
    }

    setupNavEmergencyButton() {
        this.navEmergencyButton = document.getElementById('nav-emergency-protocol');
        if (this.navEmergencyButton) {
            this.navEmergencyButton.addEventListener('click', (e) => {
                e.preventDefault();
                this.toggleEmergencyMode();
            });
        }
    }

    setupEventListeners() {
        if (this.emergencyButton) {
            this.emergencyButton.addEventListener('click', () => {
                this.toggleEmergencyMode();
            });
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏ —Å–∏–ª—å–Ω–æ–º –∑–∞—Ä–∞–∂–µ–Ω–∏–∏ Zalgo
        document.addEventListener('zalgoCriticalLevel', (event) => {
            if (event.detail.level >= 0.8 && !this.isActive) {
                this.activateEmergencyMode();
                logEvent("–ê–í–ê–†–ò–ô–ù–´–ô –†–ï–ñ–ò–ú: –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ê–ö–¢–ò–í–ê–¶–ò–Ø –ü–†–û–¢–û–ö–û–õ–ê 7-Œî");
            }
        });
    }

    activateEmergencyMode() {
        if (this.isActive) return;

        this.isActive = true;
        document.documentElement.setAttribute('data-emergency-mode', 'true');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (this.navEmergencyButton) {
            this.navEmergencyButton.classList.add('active');
            this.navEmergencyButton.textContent = 'üö® –ê–ö–¢–ò–í–ï–ù';
            this.navEmergencyButton.title = '–ê–≤–∞—Ä–∏–π–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω';
        }

        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        this.createEmergencyOverlay();
        this.createEmergencyAlertBar();

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏
        this.containAnomaly();

        logEvent("–ê–í–ê–†–ò–ô–ù–´–ô –†–ï–ñ–ò–ú: –ü–†–û–¢–û–ö–û–õ 7-Œî –ê–ö–¢–ò–í–ò–†–û–í–ê–ù");
        logEvent("–°–ò–°–¢–ï–ú–ê –ó–ê–©–ò–¢–´ –û–¢ –ê–ù–û–ú–ê–õ–ò–ô –ó–ê–ü–£–©–ï–ù–ê");
        logEvent("–†–ï–ê–õ–¨–ù–û–°–¢–¨ –°–¢–ê–ë–ò–õ–ò–ó–ò–†–£–ï–¢–°–Ø...");

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        document.dispatchEvent(new CustomEvent('emergencyModeActivated'));
    }

    deactivateEmergencyMode() {
        if (!this.isActive) return;

        this.isActive = false;
        document.documentElement.removeAttribute('data-emergency-mode');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if (this.navEmergencyButton) {
            this.navEmergencyButton.classList.remove('active');
            this.navEmergencyButton.textContent = 'üö® –ü–†–û–¢–û–ö–û–õ 7-Œî';
            this.navEmergencyButton.title = '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ä–∏–π–Ω—ã–π —Ä–µ–∂–∏–º –∑–∞—â–∏—Ç—ã –æ—Ç –∞–Ω–æ–º–∞–ª–∏–π';
        }

        // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        this.removeEmergencyElements();

        logEvent("–ê–í–ê–†–ò–ô–ù–´–ô –†–ï–ñ–ò–ú: –ü–†–û–¢–û–ö–û–õ 7-Œî –î–ï–ê–ö–¢–ò–í–ò–†–û–í–ê–ù");
        logEvent("–°–ò–°–¢–ï–ú–ê –í–û–ó–í–†–ê–©–ê–ï–¢–°–Ø –ö –°–¢–ê–ù–î–ê–†–¢–ù–û–ô –†–ê–ë–û–¢–ï");
    }

    toggleEmergencyMode() {
        if (this.isActive) {
            this.deactivateEmergencyMode();
        } else {
            this.activateEmergencyMode();
        }
    }

    createEmergencyOverlay() {
        this.overlay = document.createElement('div');
        this.overlay.className = 'emergency-mode-active';
        document.body.appendChild(this.overlay);
    }

    createEmergencyAlertBar() {
        this.alertBar = document.createElement('div');
        this.alertBar.className = 'emergency-alert-bar';
        this.alertBar.textContent = '‚ö†Ô∏è –ê–í–ê–†–ò–ô–ù–´–ô –†–ï–ñ–ò–ú: –ü–†–û–¢–û–ö–û–õ 7-Œî –ê–ö–¢–ò–í–ò–†–û–í–ê–ù ‚ö†Ô∏è';
        document.body.appendChild(this.alertBar);
    }

    removeEmergencyElements() {
        if (this.overlay) {
            this.overlay.remove();
            this.overlay = null;
        }
        if (this.alertBar) {
            this.alertBar.remove();
            this.alertBar = null;
        }
    }

    containAnomaly() {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ Zalgo —ç—Ñ—Ñ–µ–∫—Ç–∞
        if (window.zalgoEffect) {
            window.zalgoEffect.stopPropagation();
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –∞–Ω–æ–º–∞–ª–∏–∏
        document.querySelectorAll('.zalgo-infected, .reality-glitch').forEach(el => {
            el.classList.remove('zalgo-infected', 'reality-glitch');
        });

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
        setTimeout(() => {
            const infectedElements = document.querySelectorAll('[data-original-text]');
            infectedElements.forEach(el => {
                el.textContent = el.getAttribute('data-original-text');
                el.removeAttribute('data-original-text');
            });
        }, 1000);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
    static triggerEmergencyProtocol() {
        if (!window.emergencyMode) {
            window.emergencyMode = new EmergencyMode();
        }
        window.emergencyMode.activateEmergencyMode();
    }
}

export { EmergencyMode };